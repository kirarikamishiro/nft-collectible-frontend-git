{"ast":null,"code":"var _jsxFileName = \"/Users/hasamayoshihito/Documents/nft-collectible-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport contract from \"./contracts/NFTCollectible.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x89C5A192e9F5C7372D781A2099F86e0f95Be4Aa9\";\nconst abi = contract.abi;\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\");\n    }\n  };\n\n  const connectWalletHandler = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      alert(\"Please install MetaMask!\");\n    }\n\n    try {\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Found an account! Address: \", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const mintNftHandler = () => {};\n\n  const connectWalletButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  };\n\n  const mintNftButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintNftHandler,\n      className: \"cta-button mint-nft-button\",\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scrappy Squirrels Tutorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentAccount ? mintNftButton() : connectWalletButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vg9h9hqTAVJVjklrPXRRIAqzLN0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hasamayoshihito/Documents/nft-collectible-frontend/src/App.js"],"names":["useEffect","useState","contract","contractAddress","abi","App","currentAccount","setCurrentAccount","checkWalletIsConnected","ethereum","window","console","log","connectWalletHandler","alert","accounts","request","method","err","mintNftHandler","connectWalletButton","mintNftButton"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,MAAMC,eAAe,GAAG,4CAAxB;AACA,MAAMC,GAAG,GAAGF,QAAQ,CAACE,GAArB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMO,sBAAsB,GAAG,YAAY;AACzC,UAAM;AAAEC,MAAAA;AAAF,QAAeC,MAArB;;AAEA,QAAI,CAACD,QAAL,EAAe;AACbE,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA;AACD,KAHD,MAGO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD;AACF,GATD;;AAWA,QAAMC,oBAAoB,GAAG,YAAY;AACvC,UAAM;AAAEJ,MAAAA;AAAF,QAAeC,MAArB;;AAEA,QAAI,CAACD,QAAL,EAAe;AACbK,MAAAA,KAAK,CAAC,0BAAD,CAAL;AACD;;AAED,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,OAAT,CAAiB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjB,CAAvB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CG,QAAQ,CAAC,CAAD,CAAnD;AACAR,MAAAA,iBAAiB,CAACQ,QAAQ,CAAC,CAAD,CAAT,CAAjB;AACD,KAJD,CAIE,OAAOG,GAAP,EAAY;AACZP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACD;AACF,GAdD;;AAgBA,QAAMC,cAAc,GAAG,MAAM,CAAE,CAA/B;;AAEA,QAAMC,mBAAmB,GAAG,MAAM;AAChC,wBACE;AACE,MAAA,OAAO,EAAEP,oBADX;AAEE,MAAA,SAAS,EAAC,kCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATD;;AAWA,QAAMQ,aAAa,GAAG,MAAM;AAC1B,wBACE;AAAQ,MAAA,OAAO,EAAEF,cAAjB;AAAiC,MAAA,SAAS,EAAC,4BAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAQAnB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,sBAAsB;AACvB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAMF,cAAc,GAAGe,aAAa,EAAhB,GAAqBD,mBAAmB;AAA5D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA9DQf,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport contract from \"./contracts/NFTCollectible.json\";\n\nconst contractAddress = \"0x89C5A192e9F5C7372D781A2099F86e0f95Be4Aa9\";\nconst abi = contract.abi;\n\nfunction App() {\n  \n  const [currentAccount, setCurrentAccount] = useState(null);\n\n  const checkWalletIsConnected = async () => {\n    const { ethereum } = window;\n  \n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\");\n    }\n  };\n\n  const connectWalletHandler = async () => {\n    const { ethereum } = window;\n  \n    if (!ethereum) {\n      alert(\"Please install MetaMask!\");\n    }\n  \n    try {\n      const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n      console.log(\"Found an account! Address: \", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const mintNftHandler = () => {};\n\n  const connectWalletButton = () => {\n    return (\n      <button\n        onClick={connectWalletHandler}\n        className=\"cta-button connect-wallet-button\"\n      >\n        Connect Wallet\n      </button>\n    );\n  };\n\n  const mintNftButton = () => {\n    return (\n      <button onClick={mintNftHandler} className=\"cta-button mint-nft-button\">\n        Mint NFT\n      </button>\n    );\n  };\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, []);\n\n  return (\n    <div className=\"main-app\">\n      <h1>Scrappy Squirrels Tutorial</h1>\n      <div>{currentAccount ? mintNftButton() : connectWalletButton()}</div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}